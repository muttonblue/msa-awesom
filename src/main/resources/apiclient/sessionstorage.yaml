openapi: 3.0.1
info:
  description: Active Directory Authentication
paths:
  /thaisamut/rest/authen/v1/adlogin:
    post:
      description: Login using internal Active Directory
      operationId: loginAd
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /thaisamut/rest/sessionstorage/v1/backofficesession:
    get:
      description: get session object by id
      operationId: get
      parameters:
      - name: id
        in: query
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
    put:
      description: add new session
      operationId: addNewSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
              examples:
                session id:
                  description: session id
                  value: session id
  /index.html:
    get:
      operationId: getPeople
      parameters:
      - name: fullName
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/HelloWorldView'
  /hello-world:
    get:
      description: just say hello
      operationId: sayHello
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saying'
    put:
      description: Blocking for certain period, block by sleep or block by postgres
      operationId: blocking
      parameters:
      - name: ms
        in: query
        schema:
          type: integer
          format: int64
      - name: pg
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saying'
  /hello-world/trace:
    get:
      operationId: sayTracing
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    Session:
      type: object
      properties:
        username:
          type: string
        credentials:
          type: object
          additionalProperties:
            type: object
    HelloWorldView:
      type: object
      properties:
        people:
          $ref: '#/components/schemas/People'
    People:
      type: object
      properties:
        fullName:
          type: string
        jobTitle:
          type: string
    Saying:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
